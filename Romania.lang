# version(1)
# Welcome to Clearlag's language file! Here you can modify the various strings ClearLag uses to suit your language, or preference
# -- NOTE: This is the format: '<key>({replaceables}...):<message>'
# -- NOTE: The replaceables are replaced depending on order, not the actual key name. So you may customize the key names too!
# -- NOTE: The { ... } symbols represent a message block. This is applicable anywhere you want... Do not include any characters with {, or }

####----> Commands -->
command.error.wrongUsage({usage},{name})=&cFoloseste: &8/&7lagg {name} {usage}
command.error.noPermission({name})=&cNu ai acces sa folosesti comanda &8/&7lagg {name}
command.error.onlyForPlayer()=&cAceasta comanda poate fi executata numai de jucatori!

##]-> /lagg
command.lagg.nopermission()=&cNu ai permisiunea sa executezi aceasta comanda!
command.lagg.header()=&3-------------(&b&lComenzi Clear Lagg&3)-------------
command.lagg.footer()=&3----------------------------------------------------
command.lagg.helpline({name},{desc})= &4- &8/&3lagg &b{name} &f -  {desc}

##]-> /lagg admin
command.admin.name()=admin
command.admin.desc()=(Controlezi modulele la Clear Lag)
command.admin.usage()=
command.admin.enabledModules({moduleList})=&aActizezi modulul de reincarcare: &7{moduleList}
command.admin.noReloadableFields({module})={module} &cnu contine module de reincarcare!
command.admin.notEnabled({module})=&cAcest modul este dezactivat!
command.admin.reload({module})=&aModulul {module} a fost reincarcat!
command.admin.failedReload({module})=&cModul esuat, {module}
command.admin.invalidModule({argument})=&cModul Invalid: {argument}
command.admin.enabledModules({modules})=&aModul Activat: &7{modules}
command.admin.stoppedModule({module})=&aModulul {module} a fost &cinchis&a!
command.admin.startableModules({modules})=&aModul startabil: &7{modules}
command.admin.alreadyEnabled({module})=&cAcest modul este deja activat!
command.admin.enabled({module})=&aModulul {module} a fost activat!
command.admin.moduleStatus({listeners},{commands},{tasks},{modules})={
&3=--------------[&6-&3] &b&lStatus Modul &3[&6-&3]----------------=
              &8[&7Gri = Dezactivat&8]   &8[&aVerde = Activat&8]
&6Listeners: {commands}
&6Commands: {commands}
&6Tasks: {tasks}
&6Modules: {modules}
}
command.admin.help()={
&3=-------------[&6-&3] &b&lComenzi Modul &3[&6-&3]---------------=
&4  - &3/lagg admin &creload &b<module>
&4  - &3/lagg admin &cstop &b<module>
&4  - &3/lagg admin &cstart &b<module>
&4  - &3/lagg admin &clist
&3-----------------------------------------------------
}

##]-> /lagg area
command.area.name()=area
command.area.usage()=<radius>
command.area.desc()=(Elimina entitati din zona)
command.area.error({arg})=&4Argument specificat invalid&8: &c{arg}
command.area.message({removed},{radius})=&6[&aClearLag&6] &3{removed} &bEntitatii au fost eliminate din radius, &3{radius}&b!

##]-> /lagg checkchunk
command.checkchunk.name()=checkchunk
command.checkchunk.usage()=
command.checkchunk.desc()=(Afiseaza Chunkurile cu entitati)
command.checkchunk.header()=&4*&3&m                            &8(&a&lInformati Chunk&8)&3&m                              &4*
command.checkchunk.tilelist()=&3 Entitati&8:
command.checkchunk.entitylist()=&3 Lista Entitati&8:
command.checkchunk.line({count},{type})=   &8- &ax{count} &7{type}
command.checkchunk.footer()=&4*&3&m                                                                             &4*

##]-> /lagg check
command.check.name()=check
command.check.usage()=[world1, world2...]
command.check.desc()=(Numara enitatiile din lume/lumii)
command.check.invalidworld({arg})=&4Lume Invalida&8: {arg}
command.check.header()=&4*&3&m                          &8(&a&lServer Status&8)&3&m                           &4*
command.check.printed({removed1},{mobs},{animals},{players},{chunks},{activehoppers},{inactivehoppers},{spawners},{uptime},{tps},{usedmemory},{maxmemory},{freememory})={
&3   Iteme aruncate: &b{removed1}
&3   Mobi in viata: &b{mobs}
&3   Animale in viata: &b{animals}
&3   Jucatori in viata: &b{players}
&3   Chunkuri incarcate: &b{chunks}
&3   Hoppere active: &b{activehoppers}
&3   Hoppere inactive: &b{inactivehoppers}
&3   Mob Spawnere active: &b{spawners}
&3   Server deschis: &b{uptime}
&3   TPS curent: &b{tps}
&3   Folosire RAM: &b{usedmemory}&7/&b{maxmemory} &7MB
&3   Memorie libera: &b{freememory} &7MB
}
command.check.footer()=&4*&3&m                                                                             &4*

##]-> /lagg chunk
command.chunk.name()=chunk
command.chunk.usage()=[list-size]
command.chunk.desc()=(Gaseste chunkuri laguite)
command.chunk.header()=&7&m                           &7( &bChunckuri pline &7)&m                           "
command.chunk.print({order},{world},{x},{z},{count})=&4{order}&7) &3Lune: &b{world}  &3x: &b{x}  &3z: &b{z}  &3Entitati: &b{count}

##]-> /lagg clear
command.clear.name()=clear
command.clear.usage()=
command.clear.desc()=(Elimina entitati din lumea ta)
command.clear.message({count})=&6[&aClearLag&6] &a&bTocmai ai eliminat &3{count}&b entitati!

##]-> /lagg gc
command.gc.name()=gc
command.gc.usage()=
command.gc.desc()=(Elimina executii nefolosite)
command.gc.message()=&6[&aClearLag&6] &a&bGarbage Collection Activat! &7(Avertizare: Java's VM va elibera memorie libera automat. Foloseste aceasta comanda doar pentru teste sau a elimina o gaura mare)

##]-> /lagg halt
command.halt.name()=halt
command.halt.usage()=[on/off]
command.halt.desc()=(Opreste activitatea serverului)
command.halt.halted()=&6[&aClearLag&6] &a&bActivitatea serverului este &coprita&b!
command.halt.unhalted()=&6[&aClearLag&6] &a&aActivitatea serverului nu mai este oprita!

##]-> /lagg killmobs
command.killmobs.name()=killmobs
command.killmobs.usage()=
command.killmobs.desc()=(Elimina toti mobi din lume)
command.killmobs.message({count})=&6[&aClearLag&6] &a&3{count} &bMobsi au fost eliminati!

##]-> /lagg profile
command.profile.name()=profile
command.profile.usage()=<sample-seconds> <sample-type>
command.profile.desc()=(Profileaza eventuri ce ofera lag)
command.profile.invalidtime({arg})=&4Timp specificat incorect&8: &c{arg}
command.profile.invalidprofiler({arg},{profilers})={
&4Profiler specificat invalid&8: &c{arg}
&cProfiler valid&8: &7{profilers}
}
command.profile.nosamples()=&cNici o proba inregistrata
command.profile.header()=&7&m                           &7( &bProba Chunk &7)&m
command.profile.line({listing},{world},{x},{z},{samples})=&4{listing}&7) &3Lume: &b{world}&7, &3x: &b{x}&7, &3z: &b{z}   &3Marime proba: &b{samples}
command.profile.started({time})=&6[&aClearLag&6] &aProfiler activat, fuctioneaza pentru &7{time} &asecunde

##]-> /lagg reload
command.reload.name()=reload
command.reload.usage()=
command.reload.desc()=(Reincarca ClearLag)
command.reload.begin()=&6[&aClearLag&6] &bIncercare pentru reincarcare ClearLag...
command.reload.successful()=&6[&aClearLag&6] &bClearLag a fost reincarcat cu succes!

##]-> /lagg samplememory
command.samplememory.name()=samplememory
command.samplememory.usage()=<sample-seconds>
command.samplememory.desc()=(Memorie proba/GC folosit)
command.samplememory.invalidinteger({arg})=&4Numar specificat invalid&8: &c{arg}
command.samplememory.begin({time})=&aFunctionarea probei de memorie este de &7{time} &asecunde
command.samplememory.header()=&4*&3&m                       &8(&a&lMemorie pe Ticks&8)&3&m                        &4*
command.samplememory.memory({high},{average})={
&aMemorie (In MB):
&3   Memorie folosita maxima Per-tick: &b{high}
&3   Memorie folosita in medie Per-tick: &b{average}
}
command.samplememory.gc({total},{highest},{lowest},{averagetime},{averageticks})={
&aGarbage Collector (Bazat pe Ticks, in Milisecunde):
&3   Total GC (De Tick): &b{total}
&3   Cel mai mare timp GC: &b{highest}
&3   Cel mai scurt timp GC: &b{lowest}
&3   Cel mai in medie timp GC: &b{averagetime}
&3   Ticks in medie: &b{averageticks}
}
command.samplememory.notenoughtime()=&cAcest timp este foarte scurt, folositi un timp mai mare

##]-> /lagg sampleticks
command.sampleticks.name()=sampleticks
command.sampleticks.usage()=[ticksToSample] [raw/stats]
command.sampleticks.desc()=(O proba pentru afisarea Tickurilor)
command.sampleticks.start({threadname},{time})=&aO putere maxima pusa asupra probei &7{threadname} &apentru &7{time} &aticks &7(Estimatie, nu suntem 100% exacti)
command.sampleticks.rawheader()=&ctick-timing brut: &7(Tickurile normare sunt intre 0-50ms in timp)
command.sampleticks.rawprint({time})=&8 - {time}
command.sampleticks.print({large},{small},{average},{spikes})={
&aTick-Stats: &7(Tickurile normare sunt intre 0-50ms in timp)
&3   Cel mai mare tick: {large}
&3   Cel mai mic tick: {small}
&3   Cel mai in medie tick: {average}
&3   Tickuri picate: {spikes}
}

##]-> /lagg tpchunk
command.tpchunk.name()=tpchunk
command.tpchunk.usage()=<x> <z> [world]
command.tpchunk.desc()=(Teleportare catre chunk)
command.tpchunk.begin()=&6[&aClearLag&6] &bIncercare pentru reincarcarea modulelor...
command.tpchunk.successful()=&6[&aClearLag&6] &bModulele au fost reincarcate cu succes!
command.tpchunk.invalidinteger({arg})=&4Numar specificat invalid&8: &c{arg}
command.tpchunk.invalidworld({arg})=&4Aceasta lume nu exista&8: &c{arg}
command.tpchunk.teleported({x},{z})=&6[&aClearLag&6] &bTeleportat catre chunk: &3{x}&7, &3{z}

##]-> /lagg tps
command.tps.name()=tps
command.tps.usage()=
command.tps.desc()=(Afiseaza media tickurilor)
command.tps.print({tps})=&6[&aClearLag&6] &a{tps}

##]-> /lagg unloadchunks
command.unloadchunks.name()=unloadchunks
command.unloadchunks.usage()=
command.unloadchunks.desc()=(Elimina chunkurile nefolosite)
command.unloadchunks.print({chunks})=&6[&aClearLag&6] &3{chunks} &bchunks au fost eliminate!